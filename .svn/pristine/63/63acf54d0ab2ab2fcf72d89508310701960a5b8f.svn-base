package db;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Properties;

import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

import beans.FreeBoardRepliedBean;

public class FreeBoardRepliedDAO {
	private DataSource ds;
	private Connection con;
	private PreparedStatement ps;
	private ResultSet rs;
	private String sql;
	
	public FreeBoardRepliedDAO() {
		try {
			InitialContext init = new InitialContext();
			Properties prop = new Properties();
			prop.load(this.getClass().getResourceAsStream("../config.prop"));
			ds = (DataSource)init.lookup(prop.getProperty("poolName"));
			System.out.println("DataSource 얻어오기 성공");
		} catch (NamingException | IOException e) {
			e.printStackTrace();
		}
	}
	// 답글 추가, 부모글 답글갯수 1증가 이렇게 2개의 처리가 되야되므로 트랜잭션 처리하여
	// 어느한쪽만 처리되는것을 방지
	public void add(FreeBoardRepliedBean bean) {
		sql = "select count(*) from FREEBOARD_REPLY";
		int result = 0;
		
		int freeboard_re_no = 0;
		try {
			con = ds.getConnection();
			con.setAutoCommit(false);
			ps = con.prepareStatement(sql);
			rs = ps.executeQuery();
			if(rs.next()) {
				freeboard_re_no = rs.getInt(1) + 1;
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("답글 번호 생성 실패");
		}
		
		sql = "insert into FREEBOARD_REPLY(FREEBOARD_RE_NO,FREEBOARD_NO,"
			+ "FREEBOARD_RECOMMAND,FREEBOARD_ALIAS,FREEBOARD_CONTENTS,"
			+ "FREEBOARD_REGDATE) values(?,?,?,?,?,now())";
		try {
			ps = con.prepareStatement(sql);
			ps.setInt(1, freeboard_re_no);
			ps.setInt(2, bean.getFreeboard_no());
			ps.setInt(3, 0);
			ps.setString(4, bean.getFreeboard_alias());
			ps.setString(5, bean.getFreeboard_contents());
			result = ps.executeUpdate();
			if(result > 0) {
				System.out.println("답글 추가 성공");
			} else {
				System.out.println("답글이 추가가 안됨");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("답글 추가 예외 발생");
		}
		result = 0;
		sql = "update FREEBOARD_WRITE set FREEBOARD_REPLYCOUNT = FREEBOARD_REPLYCOUNT+1 where FREEBOARD_NO=?";
		try {
			ps = con.prepareStatement(sql);
			ps.setInt(1, bean.getFreeboard_no());
			result = ps.executeUpdate();
			if(result > 0) {
				con.commit();
				System.out.println("부모글 답글수 1증가 성공");
			} else {
				con.rollback();
				System.out.println("부모글 답글수 증가 안됨");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("부모글 답글수 1증가 예외 발생");
		} finally {
			
			if(rs != null) try { rs.close();} catch (SQLException e) {}
			if(ps != null) try { ps.close();} catch (SQLException e) {}
			if(con != null) try { con.close();} catch (SQLException e){}
		}	
	}
	// 답글 삭제, 매개변수는 빈객체지만 요구되어지는 건 답글번호입니다.
	// 빈객체를 넣은 이유는 답글리스트를 불러올 때 빈객체들이 담긴 리스트가 넘어오기 때문에
	// 그것을 활용해서 해당빈객체를 바로 활용하게 하기 위함입니다.
	public void delete(FreeBoardRepliedBean bean) {
		sql = "delete from FREEBOARD_REPLY where FREEBOARD_RE_NO=?";
		int result = 0;
		try {
			con = ds.getConnection();
			con.setAutoCommit(false);
			ps = con.prepareStatement(sql);
			ps.setInt(1, bean.getFreeboard_re_no());
			result = ps.executeUpdate();
			if(result > 0) {
				System.out.println("답글 삭제 성공");
			} else {
				System.out.println("삭제되어진 답글이 없음");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("답글 삭제 예외 발생");
		}
		
		sql = "update FREEBOARD_WRITE set FREEBOARD_REPLYCOUNT = FREEBOARD_REPLYCOUNT-1 where FREEBOARD_NO=?";
		try {
			ps = con.prepareStatement(sql);
			ps.setInt(1, bean.getFreeboard_no());
			result = ps.executeUpdate();
			if(result > 0) {
				con.commit();
				System.out.println("부모글 답글수 1감소 성공");
			} else {
				con.rollback();
				System.out.println("부모글 답글수 감소 안됨");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("부모글 조회수 1감소 예외 발생");
		} finally {
			
			if(rs != null) try { rs.close();} catch (SQLException e) {}
			if(ps != null) try { ps.close();} catch (SQLException e) {}
			if(con != null) try { con.close();} catch (SQLException e){}
		}
	}
	// 답글 수정
	public void update(FreeBoardRepliedBean bean) {
		sql = "update FREEBOARD_REPLY set FREEBOARD_CONTENTS = ? where FREEBOARD_RE_NO = ?";
		try {
			con = ds.getConnection();
			ps = con.prepareStatement(sql);
			ps.setString(1, bean.getFreeboard_contents());
			ps.setInt(2, bean.getFreeboard_re_no());
			int result = ps.executeUpdate();
			if(result > 0) {
				System.out.println("답글 수정이 성공적으로 완료되었습니다.");
			} else {
				System.out.println("답글 수정된게 없습니다.");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("답글 수정 예외 발생");
		} finally {
			
			if(rs != null) try { rs.close();} catch (SQLException e) {}
			if(ps != null) try { ps.close();} catch (SQLException e) {}
			if(con != null) try { con.close();} catch (SQLException e){}
		}
	}
	// 답글 추천수를 1증가 시킵니다.
	public void addRecommand(int freeboard_re_no) {
		sql = "update FREEBOARD_REPLY set FREEBOARD_RECOMMAND = FREEBOARD_RECOMMAND + 1 where FREEBOARD_RE_NO=?";
		try {
			con = ds.getConnection();
			ps = con.prepareStatement(sql);
			ps.setInt(1, freeboard_re_no);
			int result = ps.executeUpdate();
			if(result > 0) {
				System.out.println("답글의 추천수가 1증가 되었습니다.");
			} else {
				System.out.println("답글의 추천수에 변화가 없습니다.");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("답글 추천수 증가 예외");
		} finally {
			
			if(rs != null) try { rs.close();} catch (SQLException e) {}
			if(ps != null) try { ps.close();} catch (SQLException e) {}
			if(con != null) try { con.close();} catch (SQLException e){}
		}
	}
	// 해당 부모글에 대한 답글 리스트를 시간을 기준으로 내림차순정렬해서 반환합니다.
	public ArrayList<FreeBoardRepliedBean> getRepliesList(int freeboard_no) {
		ArrayList<FreeBoardRepliedBean> list = new ArrayList<>();
		sql = "select FREEBOARD_RE_NO,FREEBOARD_NO,FREEBOARD_RECOMMAND,FREEBOARD_ALIAS,FREEBOARD_CONTENTS,"
				+ "DATE_FORMAT(FREEBOARD_REGDATE, '%Y:%m:%d:%h:%m:%s') as FREEBOARD_REGDATE "
				+ "from FREEBOARD_REPLY where FREEBOARD_NO=? order by FREEBOARD_REGDATE desc";
		try {
			con = ds.getConnection();
			ps = con.prepareStatement(sql);
			ps.setInt(1, freeboard_no);
			rs = ps.executeQuery();
			while(rs.next()) {
				FreeBoardRepliedBean bean = new FreeBoardRepliedBean();
				bean.setFreeboard_re_no(rs.getInt(1));
				bean.setFreeboard_no(rs.getInt(2));
				bean.setFreeboard_recommand(rs.getInt(3));
				bean.setFreeboard_alias(rs.getString(4));
				bean.setFreeboard_contents(rs.getString(5));
				bean.setFreeboard_regDate(rs.getString(6));
				list.add(bean);
			}
			System.out.println("리스트 불러오기 성공");
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("답글 리스트 불러오기 예외");
		} finally {
			
			if(rs != null) try { rs.close();} catch (SQLException e) {}
			if(ps != null) try { ps.close();} catch (SQLException e) {}
			if(con != null) try { con.close();} catch (SQLException e){}
		}
		return list;
	}	
}
