package db;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Properties;

import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

import beans.FreeBoardRepliedBean;

public class FreeBoardRepliedDAO {
	private DataSource ds;
	private Connection con;
	private PreparedStatement ps;
	private ResultSet rs;
	private String sql;
	
	public FreeBoardRepliedDAO() {
		try {
			InitialContext init = new InitialContext();
			Properties prop = new Properties();
			prop.load(this.getClass().getResourceAsStream("../config.prop"));
			ds = (DataSource)init.lookup(prop.getProperty("poolName"));
			System.out.println("DataSource 얻어오기 성공");
		} catch (NamingException | IOException e) {
			e.printStackTrace();
		}
	}
	
	public void add(FreeBoardRepliedBean bean) {
		sql = "select count(*) from FREEBOARD_REPLY";
		int result = 0;
		
		int freeboard_re_no = 0;
		try {
			con = ds.getConnection();
			con.setAutoCommit(false);
			ps = con.prepareStatement(sql);
			rs = ps.executeQuery();
			if(rs.next()) {
				freeboard_re_no = rs.getInt(1) + 1;
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("답글 번호 생성 실패");
		}
		
		sql = "insert into FREEBOARD_REPLY(FREEBOARD_RE_NO,FREEBOARD_NO,"
			+ "FREEBOARD_RECOMMAND,FREEBOARD_ALIAS,FREEBOARD_CONTENTS,"
			+ "FREEBOARD_REGDATE) values(?,?,?,?,?,now())";
		try {
			ps = con.prepareStatement(sql);
			ps.setInt(1, freeboard_re_no);
			ps.setInt(2, bean.getFreeboard_no());
			ps.setInt(3, 0);
			ps.setString(4, bean.getFreeboard_alias());
			ps.setString(5, bean.getFreeboard_contents());
			result = ps.executeUpdate();
			if(result > 0) {
				System.out.println("답글 추가 성공");
			} else {
				System.out.println("답글이 추가가 안됨");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("답글 추가 예외 발생");
		}
		result = 0;
		sql = "update FREEBOARD_WRITE set FREEBOARD_REPLYCOUNT = FREEBOARD_REPLYCOUNT+1 where FREEBOARD_NO=?";
		try {
			ps = con.prepareStatement(sql);
			ps.setInt(1, bean.getFreeboard_no());
			result = ps.executeUpdate();
			if(result > 0) {
				con.commit();
				System.out.println("부모글 조회수 1증가 성공");
			} else {
				con.rollback();
				System.out.println("부모글 조회수 증가 안됨");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("부모글 조회수 1증가 예외 발생");
		} finally {
			
			if(rs != null) try { rs.close();} catch (SQLException e) {}
			if(ps != null) try { ps.close();} catch (SQLException e) {}
			if(con != null) try { con.close();} catch (SQLException e){}
		}	
	}
	
	public void delete(FreeBoardRepliedBean bean) {
		sql = "delete from FREEBOARD_REPLY where FREEBOARD_RE_NO=?";
		int result = 0;
		try {
			con = ds.getConnection();
			con.setAutoCommit(false);
			ps = con.prepareStatement(sql);
			ps.setInt(1, bean.getFreeboard_re_no());
			result = ps.executeUpdate();
			if(result > 0) {
				System.out.println("답글 삭제 성공");
			} else {
				System.out.println("삭제되어진 답글이 없음");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("답글 삭제 예외 발생");
		}
		
		sql = "update FREEBOARD_WRITE set FREEBOARD_REPLYCOUNT = FREEBOARD_REPLYCOUNT-1 where FREEBOARD_NO=?";
		try {
			ps = con.prepareStatement(sql);
			ps.setInt(1, bean.getFreeboard_no());
			result = ps.executeUpdate();
			if(result > 0) {
				con.commit();
				System.out.println("부모글 조회수 1감소 성공");
			} else {
				con.rollback();
				System.out.println("부모글 조회수 감소 안됨");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("부모글 조회수 1감소 예외 발생");
		} finally {
			
			if(rs != null) try { rs.close();} catch (SQLException e) {}
			if(ps != null) try { ps.close();} catch (SQLException e) {}
			if(con != null) try { con.close();} catch (SQLException e){}
		}
	}
	
	public void update(FreeBoardRepliedBean bean) {
		sql = "update FREEBOARD_REPLY set FREEBOARD_CONTENTS = ? where FREEBOARD_RE_NO = ?";
		try {
			con = ds.getConnection();
			ps = con.prepareStatement(sql);
			ps.setString(1, bean.getFreeboard_contents());
			ps.setInt(2, bean.getFreeboard_re_no());
			int result = ps.executeUpdate();
			if(result > 0) {
				System.out.println("답글 수정이 성공적으로 완료되었습니다.");
			} else {
				System.out.println("답글 수정된게 없습니다.");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("답글 수정 예외 발생");
		} finally {
			
			if(rs != null) try { rs.close();} catch (SQLException e) {}
			if(ps != null) try { ps.close();} catch (SQLException e) {}
			if(con != null) try { con.close();} catch (SQLException e){}
		}
	}
	
	public void addRecommand(int freeboard_re_no) {
		sql = "update FREEBOARD_REPLY set FREEBOARD_RECOMMAND = FREEBOARD_RECOMMAND + 1 where FREEBOARD_RE_NO=?";
		try {
			con = ds.getConnection();
			ps = con.prepareStatement(sql);
			ps.setInt(1, freeboard_re_no);
			int result = ps.executeUpdate();
			if(result > 0) {
				System.out.println("답글의 추천수가 1증가 되었습니다.");
			} else {
				System.out.println("답글의 추천수에 변화가 없습니다.");
			}
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("답글 추천수 증가 예외");
		} finally {
			
			if(rs != null) try { rs.close();} catch (SQLException e) {}
			if(ps != null) try { ps.close();} catch (SQLException e) {}
			if(con != null) try { con.close();} catch (SQLException e){}
		}
	}
	
	public ArrayList<FreeBoardRepliedBean> getRepliesList(int freeboard_no) {
		ArrayList<FreeBoardRepliedBean> list = new ArrayList<>();
		return list;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
