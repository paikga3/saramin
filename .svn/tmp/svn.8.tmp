package controller;

import java.io.IOException;
import java.util.Date;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import run.FreeBoardRun;
import structure.Board;

public class BoardController extends HttpServlet {

	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		processing(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		processing(request, response);
	}

	protected void processing(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		request.setCharacterEncoding("UTF-8");

		String path = request.getContextPath();
		String uri = request.getRequestURI();
		// uri - path = call
		// 컨트롤러로 들어오는 세부 요청 분리
		String call = uri.substring(path.length());
		Date today = new Date();
		System.out.println("(" + today + ") 요청: " + call);

		Action action = null;
		Board board = null;
		Long page = Long.valueOf(1L);
		
		if (call.equals("/listByReg.board")) {
			board = new FreeBoardRun();
			page = (Long)request.getAttribute("page");
			action = board.list(request, response, "reg", page.intValue());
			
		} else if (call.equals("/listByReplyCount.board")) {
			board = new FreeBoardRun();
			page = (Long)request.getAttribute("page");
			action = board.list(request, response, "reply", page.intValue());
			
		} else if (call.equals("/listByReadCount.board")) {
			board = new FreeBoardRun();
			page = (Long)request.getAttribute("page");
			action = board.list(request, response, "read", page.intValue());
			
		} else if (call.equals("/listByRecommand.board")) {
			board = new FreeBoardRun();
			page = (Long)request.getAttribute("page");
			action = board.list(request, response, "recommand", page.intValue());
			
		} else if (call.equals("/init.board")) {
			board = new FreeBoardRun();
			page = (Long)request.getAttribute("page");
			action = board.list(request, response, "reg", 1);
		}

		if (action != null) {
			if (action.getSimpleMove()) {
				response.sendRedirect(action.getPath());
			} else {
				RequestDispatcher dispatcher = request.getRequestDispatcher(action.getPath());
				dispatcher.forward(request, response);
			}
		}
		
	}

}
